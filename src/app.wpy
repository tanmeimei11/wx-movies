<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
button{
  padding:0;
  margin:0;
  position: relative;
  min-height: 100%;
  
}
page{
 min-height: 100%;
 position: relative;
}
form{
  min-height: 100%;
 position: relative;
}
</style>

<script>
import wepy from 'wepy';
import { token } from './utils/config.js';
// 支付宝小程序 ES next 语法转换: async await
import 'wepy-async-function';

export default class extends wepy.app {
  constructor () {
    super();
    // 修复小程序请求并发问题。
    this.use( 'requestfix' );
    // 使用wepy.xxx的方式请求小程序原生API都将Promise化。
    this.use( 'promisify' );

    this.intercept( 'request', {
      config ( p ) {
        if(/google-analytics/.test(p.url)){
          return  p
        }
        p.header = this.createAuthHeader();
        p.header['Content-Type'] = 'application/x-www-form-urlencoded';

        p.data = p.data || {};
        p.data['privateKey'] = this.globalData.xToken || token;
        return p;
      }
    } );
  }

  async onLaunch ( opts ) {
    // 渠道埋点
    this.globalData.qrcode_from = opts.qrcode_from || '';
    /**
     * try
     *   收集微信机型数据
     * catch|finally
     *   none 不提供机型标识信息
     */
    try {
      const { model, platform, version, system, SDKVersion } = wepy.getSystemInfoSync();
      const meta = { model, platform, version, system, SDKVersion };
      this.globalData.WechatApp = Object.keys( meta ).map( key => `${key}=${meta[key]}` ).join( ';' );
    } finally { /* none */ }
  }

  /**
   * 构造权限头部
   */
  createAuthHeader () {
    const { WechatApp, xToken, xAries, qrcode_from } = this.globalData;
    const header = { 'WechatApp': WechatApp };
    if ( xToken ) {
      header['tg_auth'] = xToken;
      header['_aries'] = xAries;
    }

    if ( qrcode_from ) {
      header['qrcode_from'] = qrcode_from;
    }

    return header;
  }

  globalData = {
    /** 收集微信机型数据 */
    WechatApp: '',
    /** 用户唯一标识符 */
    xToken: null,
    /** 设备失效期 */
    xAries: null
  }

  config = {
    pages: ['pages/index/index', 'pages/self/self', 'pages/detail/detail', 'pages/seat/seat', 'pages/result/result'],
    tabBar: {
      'color': '#4A4A4A',
      'selectedColor': '#D0A661',
      'backgroundColor': '#F5F5F9',
      list: [{
        'pagePath': 'pages/index/index',
        'iconPath': 'image/icon_index.png',
        'selectedIconPath': 'image/icon_index_on.png',
        'text': '首页'
      }, {
        'pagePath': 'pages/seat/seat',
        'iconPath': 'image/icon_seat.png',
        'selectedIconPath': 'image/icon_seat_on.png',
        'text': '选座'
      }, {
        'pagePath': 'pages/self/self',
        'iconPath': 'image/icon_self.png',
        'selectedIconPath': 'image/icon_self_on.png',
        'text': '我的'
      }]
    }
  }
}
</script>
